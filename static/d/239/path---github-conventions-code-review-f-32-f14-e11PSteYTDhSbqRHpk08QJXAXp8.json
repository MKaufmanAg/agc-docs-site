{"data":{"site":{"siteMetadata":{"title":"Gatsby Gitbook Boilerplate | Hasura","docsLocation":"https://github.com/MKaufmanAg/agc-docs-site/tree/master/content"}},"mdx":{"fields":{"id":"0efc9df3-21d4-54b8-8578-950b6506ec0b","title":"Code Review","slug":"/github-conventions/code-review"},"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Code Review\",\n  \"metaDescription\": \"Code review at agConnections\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Our team uses GitLab Flow for the change process in GitHub as defined \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.gitlab.com/ee/workflow/gitlab_flow.html\"\n  }), \"here\"), \".\"));\n}\nMDXContent.isMDXComponent = true;"},"tableOfContents":{},"parent":{"__typename":"File","relativePath":"github-conventions/code-review.mdx"},"frontmatter":{"metaTitle":null,"metaDescription":"Code review at agConnections"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/","title":"Introduction"}}},{"node":{"fields":{"slug":"/codeblock","title":"Syntax Highlighting"}}},{"node":{"fields":{"slug":"/introduction","title":"Introduction"}}},{"node":{"fields":{"slug":"/github-conventions/index","title":"Introduction"}}},{"node":{"fields":{"slug":"/github-conventions","title":"GitHub Conventions"}}},{"node":{"fields":{"slug":"/github-conventions/code-review","title":"Code Review"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"0efc9df3-21d4-54b8-8578-950b6506ec0b"}}